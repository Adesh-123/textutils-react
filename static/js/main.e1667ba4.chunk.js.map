{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","placeholder","rows","newtext","toLowerCase","showalert","toUpperCase","split","length","Alert","alert","role","word","str","charAt","slice","capatilasation","msg","defaultProps","about","App","setAlert","message","setTimeout","stateMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1667ba4.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n        </li> */}\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n           <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode}  id=\"flexSwitchCheckDefault\"/>\r\n           <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mde</label>\r\n       </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Navbar.propTypes={\r\n//     title: PropTypes.string,\r\n//     about: PropTypes.string\r\n// }\r\n\r\nNavbar.defaultProps={\r\n    title: 'main file',\r\n    about: 'about'\r\n};","// import React from 'react'\r\nimport React, {useState} from 'react';\r\n\r\n\r\nexport default function Textform(props) {\r\n    const changetolowercase=()=>{\r\n        console.log(\"clickonlowercase\");\r\n        let newtext= text.toLowerCase();\r\n        setText(newtext);\r\n        props.showalert(\"Text converted to lowercase\",\"success\");\r\n    }\r\n    const changetouppercase=()=>{\r\n        console.log(\"clickonlowercase\");\r\n        let newtext= text.toUpperCase();\r\n        setText(newtext);\r\n        props.showalert(\"Text converted to uppercase\",\"success\");\r\n    }\r\n    const textchange=(event)=>{\r\n        console.log(\"try to change text\");\r\n        setText(event.target.value);\r\n    }\r\n    const clear=()=>{\r\n        let cleartext=\" \";\r\n        setText(cleartext);\r\n        props.showalert(\"Text clear\",\"success\");\r\n    }\r\n    const[text,setText] =useState('');\r\n    return (\r\n        <>\r\n       <div className =\"container\"  style={{color:props.mode==='light'?'black':'white'}}>\r\n           <h3>{props.heading}</h3>\r\n       <div>\r\n         <div className=\"mb-3\">     \r\n          <textarea className=\"form-control\" value={text} onChange={textchange} style ={{backgroundColor: props.mode==='light'?'white':'grey' , color:props.mode==='light'?'black':'white'}} placeholder=\"Enter your text\" rows=\"9\" ></textarea>\r\n           </div> \r\n           <button className=\"btn btn-primary\" onClick={changetolowercase} >convert to lowercase</button>\r\n           <button className=\"btn btn-primary  mx-3\"  onClick={changetouppercase} >convert to Uppercase</button>\r\n           <button className=\"btn btn-primary  mx-3\"  onClick={clear} >Clear</button>\r\n        </div>\r\n       </div>\r\n       <div style={{color:props.mode==='light'?'black':'white'}}>\r\n       <h3>your text summary</h3>\r\n       <p>{text.split(\" \").length} words and {text.length} character</p>\r\n       <p>{0.008*text.split(\" \").length} minute read</p>\r\n       <h3>preview</h3>\r\n       <p>{text.length>0?text:\"please write the text in above box\"}</p>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatilasation=(word)=>{\r\n        let str=word.toLowerCase();\r\n        return str.charAt(0).toUpperCase()+ str.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capatilasation(props.alert.type)}!</strong> : {props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport Textform from './components/Textform';\nimport React ,{useState} from 'react'\nimport Alert from './components/Alert';\n// import { Router } from 'react-router';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [alert,setAlert] =useState(null);\n  const showalert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n         setAlert(null);\n    },1500);\n  }\n   const [mode,stateMode]=useState('light');\n   const toggleMode=()=>{\n    if(mode==='dark'){\n      stateMode('light');\n      document.body.style.backgroundColor='white';\n      showalert(\"light mode enable\",\"success\");\n      document.title=\"textutils light mode\"\n      setTimeout(()=>{\n         document.title=\"textutils\"\n      },2000)\n    }\n    else{\n      stateMode('dark');\n      document.body.style.backgroundColor='grey';\n      showalert(\"dark mode enable\",\"success\");\n      document.title=\"textutils dark mode\"\n      setTimeout(()=>{\n        document.title=\"textutils\"\n     },2000)\n    }\n   }\n  return (\n  <>\n  {/* <Router> */}\n    <Navbar mode={mode} toggleMode={toggleMode} /> \n    <Alert alert={alert}/>\n    <div className=\"container\">\n    {/* <Switch> */}\n          {/* <Route path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route path=\"/\"> */}\n          <Textform heading =\"ENTER YOUR TEXT FOR CHANGE\" mode={mode} showalert={showalert}/>\n          {/* </Route> */}\n    {/* </Switch> */}\n     {/* <About/> */}\n  </div>\n  {/* </Router> */}\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}